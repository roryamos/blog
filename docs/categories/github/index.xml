<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on Rory Blog</title>
    <link>https://twrory.com/categories/github/</link>
    <description>Recent content in GitHub on Rory Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 19 Dec 2018 14:19:38 +0800</lastBuildDate>
    
	<atom:link href="https://twrory.com/categories/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>架構一個基於Docker Compose 的 PHP Laravel 開發環境</title>
      <link>https://twrory.com/2018/12/19/docker-compose-with-php-laravel-dev/</link>
      <pubDate>Wed, 19 Dec 2018 14:19:38 +0800</pubDate>
      
      <guid>https://twrory.com/2018/12/19/docker-compose-with-php-laravel-dev/</guid>
      <description>Docker Compose  操作過 Docker 指令的同學們，應該都嘗試過用指令的方式管理 Docker 容器, 當需要運行的容器愈來愈多時管理的指令是又多又複雜。 Docker Compose 是一個定義多個 Docker 容器的工具，讓我們可以使用 YAML 格式的配置文件管理多個容器， 並幫助我們快速的佈建一套系統，提供了單一的命令，我們可以一次性的運行或停止相互依賴的容器。
 安裝 Docker 基本的安裝可以參考 Docker 安裝筆記 - 以LNMP為例的應用
安裝 Docker Compose 在安裝好Docker 之後、我們可以開始安裝 Docker Compose, 首先我們需要先安裝 python-pip
sudo yum install -y epel-release sudo yum install -y python-pip  接下來就可以安裝Docker Compose了
pip install docker-compose  需要的話將 Python 相關的套件更新一下讓 Docker Compose 能夠順利運行
yum upgrade python*  PHP Laravel  Laravel 是一個網頁應用框架實現了MVC的架構，運用了 Composer 這個套件相依性管理系統，提供連接許多種類的RDBMS的方式， 提供開發語法糖使開發常見痛點的實現變的簡單，像是權限管理、路由、Sessions、及快取機制。</description>
    </item>
    
    <item>
      <title>Https Github Pages With Hugo</title>
      <link>https://twrory.com/2018/12/14/https-github-page-with-hugo/</link>
      <pubDate>Fri, 14 Dec 2018 21:23:48 +0800</pubDate>
      
      <guid>https://twrory.com/2018/12/14/https-github-page-with-hugo/</guid>
      <description>Hugo  Hugo 是基於 Go 語言的靜態網站生成器
 GitHub Pages  GitHub Pages是 GitHub 提供的一種網站託管服務，用於託管GitHub用戶，用戶博客，項目文檔, 甚至整本書的靜態網頁。
GitHub Pages於2008年底推出。與 GitHub 的其他部分一樣，它包括免費和付費的服務層。通過此服務生成的網站作為github.io的子域名託管，或作為通過第三方域名註冊商購買的自定義域名託管。
 安裝 Hugo Mac 下直接使用 homebrew
$ brew install hugo  Windows 或其他作業系統 https://github.com/gohugoio/hugo/releases 到官方發佈頁下載.
解壓縮後將檔案 copy 到環境變數 path 裡, 以Windows 為例就是在 C:\Windows\System32. 然後到命令列下執行 :
$ hugo version Hugo Static Site Generator v0.52 windows/amd64 BuildDate: 2018-11-28T14:07:10Z  生成站點 $ hugo new site test $ tree test D:\DOCUMENTS\TEST ├─archetypes //放一些template的地方, 可以客制化自已的 md template ├─content //文章的md檔 ├─data //存放配置檔, 在生成網頁時參考 ├─layouts //存放生成html時所用的template ├─static //存放靜態文件，在生成網頁時會一併複制過去 └─themes //存放主題, 可以挑選喜歡的主題使用  創建文章 hugo new post/hello-world.</description>
    </item>
    
  </channel>
</rss>