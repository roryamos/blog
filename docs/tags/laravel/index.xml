<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Laravel on Rory Blog</title>
    <link>https://twrory.com/tags/laravel/</link>
    <description>Recent content in Laravel on Rory Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 19 Dec 2018 14:19:38 +0800</lastBuildDate>
    
	<atom:link href="https://twrory.com/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>架構一個基於Docker Compose 的 PHP Laravel 開發環境</title>
      <link>https://twrory.com/2018/12/19/docker-compose-with-php-laravel-dev/</link>
      <pubDate>Wed, 19 Dec 2018 14:19:38 +0800</pubDate>
      
      <guid>https://twrory.com/2018/12/19/docker-compose-with-php-laravel-dev/</guid>
      <description>Docker Compose  操作過 Docker 指令的同學們，應該都嘗試過用指令的方式管理 Docker 容器, 當需要運行的容器愈來愈多時管理的指令是又多又複雜。 Docker Compose 是一個定義多個 Docker 容器的工具，讓我們可以使用 YAML 格式的配置文件管理多個容器， 並幫助我們快速的佈建一套系統，提供了單一的命令，我們可以一次性的運行或停止相互依賴的容器。
 安裝 Docker 基本的安裝可以參考 Docker 安裝筆記 - 以LNMP為例的應用
安裝 Docker Compose 在安裝好Docker 之後、我們可以開始安裝 Docker Compose, 首先我們需要先安裝 python-pip
sudo yum install -y epel-release sudo yum install -y python-pip  接下來就可以安裝Docker Compose了
pip install docker-compose  需要的話將 Python 相關的套件更新一下讓 Docker Compose 能夠順利運行
yum upgrade python*  PHP Laravel  Laravel 是一個網頁應用框架實現了MVC的架構，運用了 Composer 這個套件相依性管理系統，提供連接許多種類的RDBMS的方式， 提供開發語法糖使開發常見痛點的實現變的簡單，像是權限管理、路由、Sessions、及快取機制。</description>
    </item>
    
  </channel>
</rss>